events {
    worker_connections 1024;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # UPSTREAM DEFINITIONS
    # ====================
    
    # Frontend servers (for Frontend Load Balancer)
    upstream frontend_servers {
        least_conn;  # Use least connections for better distribution
        server frontend-1:3000 max_fails=3 fail_timeout=30s;
        server frontend-2:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Backend servers (for API Gateway direct access)
    upstream backend_servers {
        # round_robin (default)
        server backend-1:3000 max_fails=3 fail_timeout=30s;
        server backend-2:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # SERVER CONFIGURATIONS
    # ======================
    
    # Frontend Load Balancer (Port 8000)
    server {
        listen 8000;
        server_name localhost;

        # Add headers
        add_header X-Load-Balancer "Frontend-8000" always;

        # Main frontend route
        location / {
            proxy_pass http://frontend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Add server info
            add_header X-Frontend-Server $upstream_addr always;
        }

        # Error handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 500 "Frontend servers are currently unavailable";
        }
    }



    # API Gateway (Port 8080)
    server {
        listen 8080;
        server_name localhost;

        # Add headers
        add_header X-Load-Balancer "API-Gateway" always;

        # API v1 routes - CORS handled by backend
        location ~ ^/v1 {
            # Proxy to backend servers directly
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Docs cho API Gateway
        location /api {
            access_log off;
            
            # Direct to backend servers
            proxy_pass http://backend_servers/api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Connection settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check cho API Gateway
        location /health {
            access_log off;
            
            # Direct to backend servers
            proxy_pass http://backend_servers/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # API Routes - all API calls go to /v1
        # This is a fallback for any API routes not matching /v1 pattern
        location / {
            # Return 404 for non-API routes on API Gateway port
            return 404 "API Gateway only accepts /v1/* routes";
        }

        # Error handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 500 "API Gateway is currently unavailable";
        }
    }


} 